IMPORT file
IMPORT json
IMPORT math
IMPORT string

BEGIN MAIN
    LET lines := file.readLines("18.txt")
    VAR t := lines[0]
    FOREACH s IN lines[1 TO LAST] DO
        t := add(t, s)
    END FOREACH
    print(mag(t))
    VAR bestm := 0
    FOR i := 0 TO lines.size()-1 DO
        FOR j := 0 TO lines.size()-1 DO
            IF i <> j THEN
                t := add(lines[i], lines[j])
                LET m := mag(t)
                IF m > bestm THEN
                    bestm := m
                END IF
            END IF
        END FOR
    END FOR
    print(bestm)
END MAIN

FUNCTION add(a, b: String): String
    RETURN reduce("[" & a & "," & b & "]")
END FUNCTION

FUNCTION reduce(s: String): String
    VAR depth := 0
    FOR i := 0 TO s.length()-1 DO
        IF s[i] = "[" THEN
            INC depth
            IF depth > 4 THEN
                RETURN reduce(explode(s, i))
            END IF
        ELSIF s[i] = "]" THEN
            DEC depth
        END IF
    END FOR
    VAR lastdigit := FALSE
    FOR i := 0 TO s.length()-1 DO
        IF "0" <= s[i] <= "9" THEN
            IF lastdigit THEN
                RETURN reduce(split(s, i-1))
            END IF
            lastdigit := TRUE
        ELSE
            lastdigit := FALSE
        END IF
    END FOR
    RETURN s
END FUNCTION

FUNCTION explode(n: String, i: Number): String
    VAR s := n
    LET t := s[i TO i+string.find(s[i TO LAST], "]")]
    LET a := num(string.split(t[1 TO LAST-1], ",")[0])
    LET b := num(string.split(t[1 TO LAST-1], ",")[1])
    s[i TO i+t.length()-1] := "0"
    FOR j := i+1 TO s.length()-1 DO
        IF "0" <= s[j] <= "9" THEN
            IF "0" <= s[j+1] <= "9" THEN
                s[j TO j+1] := str(num(s[j TO j+1]) + b)
            ELSE
                s[j] := str(num(s[j]) + b)
            END IF
            EXIT FOR
        END IF
    END FOR
    FOR j := i-1 TO 0 STEP -1 DO
        IF "0" <= s[j] <= "9" THEN
            IF "0" <= s[j-1] <= "9" THEN
                s[j-1 TO j] := str(num(s[j-1 TO j]) + a)
            ELSE
                s[j] := str(num(s[j]) + a)
            END IF
            EXIT FOR
        END IF
    END FOR
    RETURN s
END FUNCTION

FUNCTION split(n: String, i: Number): String
    VAR s := n
    ASSERT "0" <= s[i] <= "9"
    ASSERT "0" <= s[i+1] <= "9"
    LET v := num(s[i TO i+1])
    s[i TO i+1] := "[" & str(math.floor(v/2)) & "," & str(math.ceil(v/2)) & "]"
    RETURN s
END FUNCTION

FUNCTION mag(s: String): Number
    LET n := json.decode(s)
    FUNCTION m(x: Object): Number
        IF x ISA Number THEN
            RETURN x
        ELSE
            RETURN 3 * m(x[0]) + 2 * m(x[1])
        END IF
    END FUNCTION
    RETURN m(n)
END FUNCTION
